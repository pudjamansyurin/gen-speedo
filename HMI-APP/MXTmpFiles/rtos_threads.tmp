/* USER CODE BEGIN Header_StartDisplayTask */
/**
* @brief Function implementing the DisplayTask thread.
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartDisplayTask */
void StartDisplayTask(void *argument)
{
#t/* USER CODE BEGIN StartDisplayTask */
#t/* Infinite loop */
#tfor(;;)
#t{
#t#tosDelay(1);
#t}
#t/* USER CODE END StartDisplayTask */
}
#n
/* USER CODE BEGIN Header_StartCanTxTask */
/**
* @brief Function implementing the CanTxTask thread.
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartCanTxTask */
void StartCanTxTask(void *argument)
{
#t/* USER CODE BEGIN StartCanTxTask */
#t/* Infinite loop */
#tfor(;;)
#t{
#t#tosDelay(1);
#t}
#t/* USER CODE END StartCanTxTask */
}
#n
/* USER CODE BEGIN Header_StartCanRxTask */
/**
* @brief Function implementing the CanRxTask thread.
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartCanRxTask */
void StartCanRxTask(void *argument)
{
#t/* USER CODE BEGIN StartCanRxTask */
#t/* Infinite loop */
#tfor(;;)
#t{
#t#tosDelay(1);
#t}
#t/* USER CODE END StartCanRxTask */
}
#n
